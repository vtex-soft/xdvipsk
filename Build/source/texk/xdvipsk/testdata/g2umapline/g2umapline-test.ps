%!PS-Adobe-3.0
%%Creator: xdvips(k)+lua+freetype 2024.8.4 (TeX Live 2025/dev)  Copyright 2024 Radical Eye Software
%%+        Based on dvips(k) 2024.1 (TeX Live 2025/dev)  Copyright 2024 Radical Eye Software
%%Title: g2umapline-test.dvi
%%CreationDate: Wed Jan  8 13:48:49 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.2757 841.8898
%%DocumentSuppliedResources: font ZapfDingbats
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.vtex.lt)
%DVIPSCommandLine: xdvipsk-dev -Q1 -lua xdvipsk-www.lua
%+ g2umapline-test.dvi
%DVIPSParameters: dpi=4000
%DVIPSSource:  LuaTeX output 
%%BeginProlog
%%BeginProcSet: tex.pro 0 0
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: ZapfDingbats
11 dict begin
/FontInfo 11 dict dup begin
/version (002.000) readonly def
/Notice (Copyright (c) 1985, 1987, 1988, 1989, 1997 Adobe Systems Incorporated. All Rights Reserved.ITC Zapf Dingbats is a registered trademark of International Typeface Corporation.) readonly def
/FullName (ITC Zapf Dingbats) readonly def
/FamilyName (ITC Zapf Dingbats) readonly def
/Weight (Medium) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/GlyphNames2Unicode <<
  /a13 <270C>
  /a14 <270D>
  /a15 <270E>
>> def
end readonly def
/FontName /ZapfDingbats def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 36 /a3 put
dup 37 /a4 put
dup 38 /a5 put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-1 -143 981 820}readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F98F75A84BACE2D036A6B51B8484931591D92E5069E6226D5ADCC5DE4F8
107AA69A35B55F6A9B4B4F93C56C23BCC61DD7BF8F32F21D58E41A5F790CEE2F
02AF43775B31E9B42A3243825306D11BDB28701E6106D1F784EB781E79B26FB5
11A5C6F2774A5610ED485E439D2455F01EB6B82FAD76849FC87A88EC75072265
2EC6071BA9A2A9281F0250A95733B8F598B6E329DCBA2B17C02C232E8B8958BD
30392D01DD31F3537491986618CDA4204D136B3E42D2AD4199E21ACD20A9DACC
03BD0F719E111BA9D65BE202B9AEF93071B9A2A82D28B2C2AAA233F5B2FC1BC0
BBA9DACB2102CCB64630AFEBE2CCE6FA18E0B9A49E760C260A508A3D6E1006CE
BF3BA5BDD7AE126781E112D5BFC83C7BCEEBAE5B5044DC982AB09CCCE76FD066
9C0FB4C5B7FC4C70D67E6ED3C19E1E36C19D64096B11A1025299AAB3CFAAB653
6F143C91A790113A0444318CFF5A2733E8D91270ABF4078422F6342D8BAF11B7
9D59C4C7B0B6B613DC52E2381C08BEC09585C00522F0CAA71174072000B0B8EF
1E0FA8442C245883F93503A37ED1DE80BC2FC7144E0D62B0C6CE4DF34102D390
6D6FA953306BBFBAE953C64835549C33EA858F17A81D9BE644E73C1A99135206
965E1322DDBCD3AB839E4F3936179141565BAA493B5CF2DEE1DF9723A36CDDBD
89C6030D6D441E91589540AA5DD8C69EF31BDC421B64D92C40E499CD75A2BAB2
A1010AA9F747044F94D84283133338275248981C982F26246EB79F831027F594
3ECF1C0DB100F8A0CD6F6FD34F5BBB8D43A549D408A51DFEA23EE920F44B8F02
32C0BACE835854A72331F89183535001437AE728C448DA76A1A463626BC09B94
A83AAD8DE725383F568CDEE843A489FC1A25AA785751944725814EB98890CD71
395E597C09F13A650AC69FC21F70F0C767B11B88136D6944092A53E43098382F
89865177AA3924CFDCF56E6B16AF1B7C60F1A2EAD1317C49C854E1890D8083CC
8045F1382286E92EB1B2F3A23707FB197FBFD0B166ED270A35CDEBFBF625A80B
F2A0448A84C5420AAB223BE0C93687CE13D7EA4378CE942D14E02CA630CF2275
DA1BE1A851F3DDC1ECA9B83CE383E143F4C5D18E4419840086E1A9342239339D
912D968755F86E5B01D947059EB6D92365D2EBD081BC7FF15A2B0D3FC6ED9C11
6ABC2B3A537DBC36DA6EF5A42E20FD3267172D037B194077E4766B7B739EAAF0
7104EC5A73A98F1555679F6116B45D136415D0FD6933B7665EA3B6DFD76BDE57
A89609B9D0745B7EBEF5FADDC671C19584777E6C97FC1A88E17F17FE7E4DF169
E8741C6CE072915904F196627E24179B7D9F84A6479C638FE616B4FE4C5815E0
FFF7BD1076F31F97FDA0678FB65430FAE246F97DD10CF46A8BE52BEA4EED0FCD
4F407B55B876E6A12533F973FFA817CD4241EC91235F9F1BA07A5A482C1EE167
38DDEBA5EFEA93C7D3C750D98BBA7DB249B7E3BBFE14E4DB113AAAD3D0FB4195
7900557A3BA356A05DCA0FB1C5229F5703F44FAC615BD5E47271316504D470FD
B613F5F3598122125F78790CD2211F5FA5888C2C52E6485C26BFBD76C3673860
A3AB1F2E12D08F1B6618FA5386EF83D076C2DB3E4C518AA4D5A5D7F87745C1BD
47E651A1129997C1F22C1FB005727384A2B775E6766C82A978B7313FDEDE3074
A4E9DBCE39E501FCAE6A4A7EFCE370A975E4210F3936DE5889365D6071B61049
5DA56EF8A0B543953178A6930DE8CC244ACB5DC1783E652D4847F2FE42AAFD9B
6E7267DAA379732957AC35E111AD662538AD5EB1D16A853C96183A27302E4331
EECF877A3C9B556E52F3BE23B64066465D51615F84D0F61F2A1E1DB887A08B02
3ED3D7EA36F16DE059E4885E4CD6B62D5EE5EF6C0B1EDBFCAC67049DD1B8ADE8
AF9C94E53E3ED86758CA98C78B7731781FE5D05D5E09805A358F5C21B3056E35
2FFE3558E431CF64E0E18B643FC2B4F3FA7769DB414649B9442623061D6692AD
7F979F9B86E0222020DC7A6C18D0F004526E18BDB4EAEC427757048AEE68E5C4
E64CBA5F8F0D5702F450F8131D570FF2FB5F6943FC34C28A18662226B3FDFC8A
F8099CBCEF2B5445B1A53B502775EDE575FDBA3074D24F31CF98D22DC5F1CDA5
C4C52CB40ACDDC0D88E7CC1C9B59168843DCD4EEAF8844EE239997140FF1532F
AC898C85516615195ED4B82D10D7DE5CB57A30F2082D570A1DC7ED9DB2348F4B
DA410A72D950C9A93F4527426997D4479202DCC83B2AC8A1BB77DD482C10F29C
0C9BF089AF8CEF5573B5D0E8EFB4E8CCF3E7AE75FBCB622067A0B093EC160A07
270010142496F60CB30430A9C643DA373858E648347405570F06A9907DF8E3F7
87EAF1391E8D4264FA4C353F09500F3A6571A6EE9315FCB599AE122A3004B41B
FB2C146D133AB4F62D6449E14D4093C51EBC67E17B148F05FF52F9B4EB98926C
1CF73D1CB7518F204732B5003F5D18F35372C670961563E3ED4C20246564C7FD
5E57B7BF8EB65D172313A737A00B245A27AFD8D18CC2BDAFC3B6AB6D4CE12A72
DA524B0F0890BE5FFA129B13305197D29E126230B7B98A6E6AA2689571883F01
83C1C9C740F64ECDDADF68976F41123E5CA488268432A9CD78A2C3CD57E79648
14C608B4DDD70D15CA265D917CA68175A65651441765E1238AC2BFB4E6E3FE2E
F6B491BAD552FD0C9BF26E913A517CA2650FFF6D89CDB5AC5FEED5FB5B629CAD
8E550FC245DB28F349233251666E6A9ACDEEE2999B2CDCA1252C5755E6C277C2
C3488C248457781F5EE0150C54BA5F3150E5E82DE931CA620A7DEA91A4C21037
BA0E02D5CFA90AC16BAD16D42E29A509EFD1DF72FEB6FBB0D1B6AAF63DB3AFB9
EB614E23F7D32C2A9555DB0127AF883A6CFE045B5267AF3608547CA813F22A9C
56C52D6B9FEFF83777207F8A83303019FCAD52575EB5DDE6B64A27593C5951D1
05D65606027CEAF84CD22A61BA69857FB2330928C1E5F8FB4051ED02837BFA66
9EBE57C20FD02D89731375515AD144059FDFAF4F0245779D282D18A2DA41FC51
9455691E4207DE4A92D008A8C68A1C76B8A0E9A926A634B2DF61C946A648F867
416E1FE8C348E5E0A3E947E0CE2CCEAF5249F76BDF7112DCFE34D8E3D55315B1
DF625254A0EB74F60E6AA9DC21615679C99ED3E1CA82A1DE2049B1639624B083
E54D93BBF8C8CD7FB910F8FF6DD6820AA01F07CEABFAC1E4079E42C81BDF8673
A3ED3D919E60BD887421ED1ECFDD2E0F1DCECD505DC35CB149E68A4ABBFD0B5F
6FB7FAAF972346E469D4BE6036A002B983934E83ED73AE5F364DCB2DE2BDBF04
A77BCC2BA9124F69B1286489BEEA10A597E162351B54AE0BA1503522A124564C
9B25CDF9C7444F64AEC2E412EE5E6AC325D9411824BB0A68F2657917A7C122F8
F3D7E0E4183F4BC420EC76B4126B1DEFF1BB9BAF947743E985361F5A34137056
7A791629869B58CE598FFD7E9CE412E71D59DABF07BD914A8E29FA7B50C20AD3
8F3A8C0E0CD43B9A24F5A9BDD8E09F25D875B88DE424B47AB77FF429F96D0DCE
7305761322D360A0490CFA44362E55C20F500DCDDA3C71833EA69F2D1DCC57EF
9039FB365DE4872D4B907A28EB5E9375E3FD97FF3479DC71ACB9334B00EDBAFC
19F7E2D96BDB20993AFD76DA70F3D501FC8944C5855E180D624684E1DD3D9E64
0BA6D2C2E710CA128E8B95A7F3B7915B3B1E68910DA373B31A171E129FD3D19C
775D6FF947F6BCA7D2B30B635A17690233682AE3E67900360AE54F8CCA66519C
8F5865B057F75731662858BCCF98F350598765BF8F4754E7E3E8536736524ADE
8ED697D9F368D927AF2275274641777DC103AF1F54A653CE57E87281FDCF9B90
6EE805BF0DE3900D16CA9012EBBC2018C55A9D9EA5D91B86D7D2B01A9238DDC1
72B3EF41E45F7F61CC55F70010805D66672E2336B76A11D178D65FAB990CD9B8
E88E32E655F13E7C83431A4CDC9B1F8BE89A590423474B97E9CAF25B3F58A361
C3C3EBB3655EEE94A62A3D9BFF74A1F51A8FAEF451CC78F25D7C5C701A8EFDBE
2B44B49B3E6398E1379456A8F32CF21EFD57C4CD0B51B9191D5B4BFCB788794D
AF9F6260CE1DC0B6F9DF21A82CDB96CF2BE5F05BAB96F90BE7D3AB8488D8C344
654CD5B91CF41FA045451587F3B5932904D37878DDE065ED143C9F37E704C2DE
46AE00AF773913DD009CCFDC5FC3AF1EAF3F230D5D210FC7E198AD9E31E574AC
AA44FEFF11C1E067598E1B8FA247CDFBB93D7160CADD717609094049F144628D
0C494B2AD33DDA0D8DBE53EC4D0D857287C219B4C2FB5B5469D173952966F8F5
DA8E7B447AD731198DACE22EEBB3F9CE70E4846E80E90B011561CD4EBC1CC4BD
B0300051335C140C180CC48C0F9D5926F0CA97D0D86304616EFAFC383126983D
7EA0A15332434667F089B2DEE5BCE6ABA7C05FA6C191F7A80E40AFFB2EA992E3
9A5CB1DF63C0A664335F67B9DDD1B3233B9397E8427E90AF68A5B9D024538265
DC642DDADCC81385EBE084560A241A16D304B2996DC77BD87472592808C08DC1
D154A4514389F1E36AD630DEE071AC39F4869A33000715771C1FEFA4AB79C5D1
56C4A831DAD661E6F0EA1DB81A0878CCF53D9B6D164148789B6A407EABA4A8DE
A5909A4971591C710366ECAC12405F80F2BBDE4A37BD2ED2DA62500B0209CCA5
F894941B64CD9801CEA5422AC78E69768CC7AB6E79E8A68B4EF2356E7A7F9792
94E4FCE0F6826F908BF9C29A73D7DCF7748EBA0F6B6919ACC878F7F63EDEA63F
5AA84626BFE60071FD5D04BD1339D2D903417F1007886C4663E744455388E93A
D5CB3F0C59263FA14E2E44E7A83AE34804BB65BF8513C1B4CE2928CF3C121129
ADD3AE0393073946F4BAAC053154E07738A2E3AFB42E67CDC0A602BC5DD2456C
367C7BDB432343F0EF3AD29C43D030ABEE7CDAFA2EF1E14ED8EF6FCC31A6F60D
D3CBADB2E8C73D35965B8A3654B08776938DCE5C60D6A10375667825358DCF40
08FAA8E35418ACB1741D184007401F366AB8C5709771F2BC8AE632FBC4CB356B
5B7569C614B5FFFCF9C2C086AA21D20FDB214B643A36A447F62712B673BB3249
DFC375BADD8C06851524D166CEED500622A2014C48EB7FE9D1349EA274B0C86C
0D3A617985B6F0ABF4C6D90E0D88AF7AED74D9781C6E595B3A7C9A981FF7E1BD
96B21D6EADAC57DC8128494A758587EC71F8791F382275F0C4E44B39CE5265CE
465248E31E912D08A7667D7C591B61E85C282783F6750DFCFE9CE3C7F5508AB9
5A7437B8DBD142D0E8D87A51F26BB938818D531BD06DC8D842239D724172A901
5495554D088AC3BBFB11196DE10683F11DE3850A36AC340D37688B8A07A3D156
167BA287DD00DDC69414E81407F189478F1FDFA5A4C78E425FFF6966BD9322B0
275A299C426F110AB63FFE113F072D85542665FA6DC32744436EAC64CAAC1E8B
607FAFE03E14C9CDD86086170CEA57EB947EC669D9E7CAC934D15F548432334C
E25BBD7179E7080BFEE466A1EBBA272C76D8269D692471454BF1C1B113237AB5
CC31CEB1349D281DAE9A805A461F0B1887186061BE2D042712E60AE006EA63F5
795C722ED2FF5F4135E7EA0FDBB3A32176E865EAF8F56A5C09006F3A39B43BFE
D73431A9C936B9E05904BB188DB2D323700B083E6F8BC76EF77C6E740383E85A
388B99CAE763E41AF380435752CFDE450795A5ABDF05A9B44DA44C60ABF57528
003CE178CCD257A6A624051B28732711716E70D2804108E9FBEA7111919449FE
6F069F90F4A846853749C86A6AFC2A70250A6B831CED84D386D19E8EEB427FB8
3813C9BC6968CC7E1EB12678C59AE09ED22AE943CAD90C568433BD8F85672469
D856847D34333235BBA1CED5292DB4DA38342C0021B01C07789536B1CD17FF11
CD94CFFE66CC72903010A8FE154344F677A4A1AFF042AFE03B8EA4C25F2B8530
1E65320BCF30992AA41B396DEBEC0FF2BC3084D2F55A864952411D068D9415D8
AA4275F406E10C6FEFF483AA4C7C9C61A5246948CCE7C86D071627E46AE15138
9888C2EB57F2632126C001C2354C40E196EB48DB5E1A0E9807D360EE99780DBA
A19D639A03A4B5B480F71D794844779E0CD9476D3BBCBA98AB86332818EA10C6
F3EA58B33FE075521A8C020F9BD1D58A9BCCEFAB8B979BD91DBF71C893C92249
FDF2605AED52CA3ACD7CBE7297EDB0E4BE9A1A4D5596B40010312A43212B5B00
DAB7F7EEAF63F8D0B481C3DA1059690B6CF032A8843144EFFFF0A9387FCAB26A
83CFB19E1167F80F7086BCB4B36C078D494E4EA1446BFE6FC08241295CAFA68D
28538C7FC1931C7FC6AFE068EEA8B03240C46A4F26DE2E103EB5550286FC0456
08E2CA3A724DB41DE40FC8E52F3173D277C764E300541AF65075D5127695D6FC
07A258594AE3ACB0E8399D4FB0F30899323DDE0BDB12085F3D3E5905EB634B61
14E38C49586F7A211F72225D81331AC05EF80827D837369DAF480732EBB5A447
923265A89F851C4B5F37A8F06A0C6B909C6A7377F35F3AC57A1EDBDC6E07704C
F1E5057926A18BBC645A5D8C4F8A74CDA53B70F491D5FB3D040B57B8121AD86C
64B0937A1115DC13DCDDDF82ECEA943267C158AC94CA46C275A7A8834D9A53D8
8C40FCBB20052C5F3D12117ADB430557DA66120EE0D8941C2394CD61F371B3C8
55CB993EFA453D58CA484AD169E5FFC0F527C5B5A8590223348E583239C39721
95F2E3F2C028C5EF24AF7DD751CF51F27B571C939FB86BFE60FAC91C0F1C519D
623037D39D2678655AD33DB2510FF245BEC7B33261751AE6213C112BD816DB5D
9C59E1A0206B7062468286D95693B98D1250FE88D07E5731F1C3A99AA767C0F3
48A0C859700B2926A2029AFAB38A815B713E921AFC4028F57840ACA315EA5F7A
1A4097A36061CC64406DE5D90A0D1AAAF92AC21305870BEE3C9F86929D474736
9E037B7134C394697F97D20D5219A71562204B651E83B1CECF772F34F8089EC5
3257207EF1D6ED54BBA43B136FB900C9615F722DA9E94E8D31831EF4C6476991
4F700955D967E8664E8470D8A13609B659CDB303737E087269166FDCB5E7211A
3795A9B5FBA162BB0BAB4CC0431219D8CE4DEF92FC6BA87AD98A391F570610CD
F0043EA76D1FC3355A3A2E5B7AF64A0109F7C60572E3A431B00A9E8548FA7C18
0D3CE75923AB9B445F3D23B83E459CB970AFCCC415E7627F581DB8AAF9FB4F4F
D5DCC0CC25C73F518B9EA8A3028D4FEB6F83D2CEC9EEB59F18E5D58FE28A73BE
0B2713EDC78FDDFA7905C278BB15F3288CEC884B26DCAA25D041C0BC94DC2CD6
D95068DD48CBBFEAA81F5D11DD44935869EC0E7F529EBD2F7F81251078DCC444
4EE33A33FCEDD3B8778BB281B2485C50A9830D9F9BA8A98439583F9FCDC512F3
8EA5BBA1AFDEEB1C47BACDEE45A9F3FEF6B8BF627259542BD623E634D62F6F16
40B706EB4413026E8CBC15CAB7B1B80D86604C883BCD9F4BB11F629866181351
A1553083201F11BE07DA0E5EC0F6AC2DA72DB6FF122982FCF9F2AC82CAB219BD
5A9B35782143BE47F6D7A6973CEC6954A168C49142067C47D32240DEED896A46
72FF09B0AB096BED4EC094DFDB208F9A000CA5D0E55493F60A28D81DCD1E8DA6
23BFBD5571921D45F0ED16190B173E5C99CB752E8167DEA1649F53976E0ED524
EB7A918B32AE929B96EB7B59540B407D42D116D717D17A9F15FA1BF3DAF8A637
E2DA191CC42F3AE2C7AE8117A9101102BAEEAE6EC6CD98A11CF434BE718B4213
DC5E4BE3E27CECE3167D80600B945A646A0D42B5BCC5E470D568BC4A1796DA83
5F45B4380BAEBB0D3E0AFE968AD16ECC7765F6F5DE725EBF142C7FA5BAF9E962
92AEB557B6936083BF5D808D32048E1BC50E1A729B27053E0F6D96D1F0F7DF04
DF478BD8D825D7050E9460378CB8294F8A0B69871787CD9648F58DE62DD1DF45
C7C96F9B701005F70710DF9C9325FA8C3397A0243063499F2468B1A03EEF3837
812A5E03FFA70F27183245246BE57408CE8AAF3A48C72F9F2DCD3D3B58219998
79C1BDB510C1E17BF86E72691F9C641178D0463EC8C8ED339E335DA2DC7981C8
2CBDED384073C1618DF8D7D37C4751B8C6F6FF275D145A15E323C2BCFEA679FD
B1CE311B82E00B6C5F344C670CF0586134DB946CA837B0FE2EA53A7AAE173950
CF4A415C5ACDD4BD09D239CB56272A729E1FB63B8E40C01E5774D1C2D784583F
562C05059505C8D1E6EEEAFB28480249E20084F4C01F1149CCBE30982AD2AFDC
49973F65991F86E5848D7D8CCF7F3C5F266882130526489300A2D03E4546F035
1CDD45086905342282DE388F262D4427DDA498D72C313ADCC0DE305E7AD2CE0F
8E8E2B42557EFD955F853F8B924C7B753F6E823665ACACFCEEA48E8A7E042AA3
71D2E2380125D05BD53A4F60A67B93CB6298F9EE660D4C62C19E602D59050686
D3DC30F917C7A9CA604CF872961D50F182C36506D72483A24A760FFA000582EC
16297C11BA085F9D2CA21BE27A569E5F0EF49715BDFF46F1AB2C3BDFE8510AE4
91A1A172FFBC57BBBB490D205F80DE02460E8D88952DC04F6EBAB2E91AF0BA95
827F51E088BF9BCCE4FFCDBDD3505DA944FD13843A3FA0C03A32338EE344FB33
122AA4C153A32389F006FFB57F980485F452A80D32D9BEB219517F331DA0E453
8B03CF18832130A3DA1E2ED2F20FD08453F7D39198105B719F3A65DB901CF4E3
4BFF5275FE9BFE037903C98440DE5F735D0950AC89A0606C248E4453D8D9734F
BBCAF5583C41E56AD8A139300ABA223A7A6802BD390AF25F8D99EE96271D6304
B95DC6920785A3148FB285B72C04F584CF2B4EB833F307488A9B054F87C6FB13
A61F24EC5B51CA262F0C1ECC241EF24EF9541BA4CD3A2F9C92E206D67AE53C49
62F0B4269F80CF1EF32324EF6A0DDA9B71DD875ACE0FCACB72E14C1D02D39B43
80916D1FDD61AA3F4AC000FAB997C869A8360AB0D794FB3DA8DE0E625F4E2975
E14C6FEAB78969DA055E9CFAA81830F67B01B0D325B8FB6FD35DB99874CD62A1
26CC995B2267B89730488219EFD5FBA63171D385F2B5D2B88D503585D7115AB6
116957DAA5DD05BC094547F7590D407DC5FCE4B14BF26A5DC43759F70E372177
BC03BB231134302A98312322D769A9AF83BDA04D50F609C44414A78D9DB7BDF2
86423213AFBAAE17DB5552C5EEA64310984FDEFFEF2C3A9BE804D4619E0DEA4D
E68FC1667F1C9F59F838D169305DE0D9894069C6EB1602DCE7A20D2BC9184DE6
F736119CA21ED701DFBF89A9308DC72E57E41B76BB3B51022DCAEF46135AC6DE
ACC28B0B0FB158A96632CEAFB7768821B475A772E53CF249CE94A5479648F62D
E48D99E8F1489692EACB2088652030A9C2F99FD7DF05DE1907461B05E62EA4CA
60EE34DE916FD0058FA47982DFAC8C963273C3B4FA36DA7AB25E84A4C578CBB6
6DEE18E54869A1F92AEE72193C7B28C5EF840F0F81DD533A69D4075AA71AA9BE
31499618D1C246EDAB0FF46014B660B54DA9D731B8D6FDC306485086A5C7A0E9
C06EA08D161C43B4A985F7FE78BE6841F0409756E50BF59677E59BFA4984AE9A
8A22B7FF2267AAAF286BF293E4B8C9FADBAFA5F4CF13650024F91C4509EAA0F8
0C88DFC97EF804FE235826ACB5F5D868314240402A87E347E1986F53970CE371
2FFD3168872F4E7F2DBD8E4612220EE4F3C148CE90D1EA8E88095A50F8DC99D8
1520F085294B51F2DB0C706A33A8E91BCFB2A1A782052892D38E793D54FEFD77
29A1900CB9650437DA512F1EECBECCD01D30BAC95732BAD997EE6C4AB39316EB
DDD1E5FDA65DD057DD231C4690FE5E4CE103FC906D1AAB1939E92D2E30A504BB
3FC8923B599C846589E8D21052241D194276B258B21296699F4F6CC636836DC3
571BC20D35F9062BF682E99FAFDEAAECEA8B255BEB24BAEF3C8B3FE1945D1D58
8C13295CCAB1313E2A5E7C54D8682011AB565E8A53BD04E74E13C29B121C8381
EF1FB5C33C10E47FCE5EEEF335BA9E0E7EFA2D3175E40DDF85666E02D8523D3E
5C1BDB54A974E1D93FF58894514F7B6F4BF5A08F26E3347C283C1CFFA8D11A52
DC594034ACB56D3931B2B0019605F128B13CF231F384E2E0694F9F65CA19FA4C
8CE7F81E2EF97BDA9EC0113FA5F3C8B05E451EB1934EBEEB0620E64436D6F42F
FC069F055A7DC1574E713EBAA0F0DDDF771753AAA610A2DC273F4AA9D6C02501
61E3186723E56AC4C4D35E0807540B2C4DD8209E2A3EE9AD05C6AB52E7058AC6
CC9A1020F4008C0219D35FE6264DB6570867C7C010B95D2805627282CC117FD3
98F82F51C78326B7B046FE0441C24699197AC007112C25F4FF007DAD3B79689A
DDBDF000A2EAB87C20B221301EFA2DE3B1E1955FD586AAC486792AB3803ABB41
670653AC16AAD9290511009F6FEBFBD0F17E258C5A3341DFE1C9EAA7732159B4
6FF5BC7D7AB5A540480B313A5B36323F2F1FFCA94D2F40FE4B0FD2E6D9FBAE9F
E05B6FE8A8063935C3F2FCB1B883DA016E2A017B0E1D4F4F88998AAA6AC23941
212001A106CA550148645E9664E36243BBBB0FC3720C9012CDC244D6BFE0BE11
822176A3A980A616C412CB26AA5A942A24010D4C49D494DB36E45712F6B50D87
0846DE6E8B46F0A267921A8F98E4612D30BF15FAE7FFF1AFCD76E658FB72D26A
1D17AF04BFCE17A6991389D3218E7FDCD4C92C5A57E64C77F6ADBF4C3FD2831F
13DED94D4B2BF550BD2A842207A15828C25267CB5E9DF91ECFB40A91D6A5546B
FB9232CDA1CDC8B94D49D95B08B46F227BF3BB08D7D960FBF597D0718F841AB3
BD446934D6E0EFBA7D25FA304CB4C7DF05FE15F3CB2D30A2D98016659A253141
BBE68F78F42A92FEAF56B2675D400F5608C4356F5AA2E5653C60755144E815DE
08E73D035B5234550475E8F5144B9350AF00E33769A5E77163944DCDDCBE4541
8857816B5D97B8F600ACBADC04B2EC76AB565E0C9CC06CC0A52205C35B6170B7
E35516CA860E94A95E0F38935F1937BD8785970B2ED0692D8502D364D5B3705F
84658DFF1BC3B10C9C5A0DF4F45789A5409950ABC9ED1AF69A78A863CA9BF57A
5617C07F7537E9C48D8A95144AF076194C2FF77F47FA6402415CF3BB8BC89F75
EB3209541E551027FF96378A9EBF485723AAC4C32F3BFFC24175EBB58433B954
86FABE621B090043FC9A395BF03E0B8664859A144C89FA0F87724D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 4000 4000 (g2umapline-test.dvi)
@start /Fa 217[437 398 542 36[{}3 553.48 /ZapfDingbats
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 4000dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 3432 2933 a @beginspecial @endspecial
@beginspecial @endspecial @beginspecial @endspecial 4262
3487 a Fa($\045&)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
